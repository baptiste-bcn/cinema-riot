<trailer>
    <div if={state.youtubeTrailer} class="text-center">
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal"
                data-tagVideo="https://www.youtube.com/embed/{state.youtubeTrailer.key}"
                data-bs-target="#videoModal">
            <i class="bi bi-play-fill"></i>
            {state.youtubeTrailer.name}
        </button>

        <div class="modal fade" id="videoModal" data-bs-backdrop="static" data-bs-keyboard="false"
             tabindex="-1"
             aria-labelledby="videoModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="ratio ratio-16x9">
                            <iframe src="" allow="autoplay;" allowfullscreen></iframe>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        export default {
            autoPlayYouTubeModal() {
                const triggerOpen = $("body").find('[data-tagVideo]');
                triggerOpen.click(function () {
                    const theModal = $(this).data("bs-target"),
                        videoSRC = $(this).attr("data-tagVideo"),
                        videoSRCauto = videoSRC + "?autoplay=1";
                    $(theModal + ' iframe').attr('src', videoSRCauto);
                    $(theModal + ' button.btn-close').click(function () {
                        $(theModal + ' iframe').attr('src', videoSRC);
                    });
                });
            },
            onBeforeMount() {
                this.state = {
                    youtubeTrailer: {}
                };
                getTrailer(this.props.type, this.props.id).then(youtubeTrailer => {
                    this.update({
                        youtubeTrailer: youtubeTrailer
                    });
                }).catch(err => console.error(err));
            },
            onMounted() {
                this.autoPlayYouTubeModal();
            },
        }
    </script>
</trailer>